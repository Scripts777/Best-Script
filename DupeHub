-- Grow a Garden Local Cloning Script for Delta Executor
-- Safe, visual, local script with native Roblox GUI for cloning Backpack items
-- Features: Pets/Fruits tabs, Age/Weight customization, dynamic Age field visibility
-- Pets: Items with "Age" in name; Fruits: Items without "Age" in name
-- Cloned items: Remove "Age" and "Weight" from name, update Age/Weight attributes in children

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Backpack = LocalPlayer:WaitForChild("Backpack")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "GrowAGardenCloner"
ScreenGui.ResetOnSpawn = false

-- Create Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 400, 0, 300)
MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Create Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.Text = "Grow a Garden Cloner"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Title.TextScaled = true
Title.Parent = MainFrame

-- Create Tab Frame (Left Side)
local TabFrame = Instance.new("Frame")
TabFrame.Size = UDim2.new(0, 100, 1, -30)
TabFrame.Position = UDim2.new(0, 0, 0, 30)
TabFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
TabFrame.Parent = MainFrame

-- Create Content Frame (Right Side)
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(0, 300, 1, -30)
ContentFrame.Position = UDim2.new(0, 100, 0, 30)
ContentFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
ContentFrame.Parent = MainFrame

-- Function to clear ContentFrame
local function clearContent()
    for _, child in pairs(ContentFrame:GetChildren()) do
        if child ~= ContentFrame then
            child:Destroy()
        end
    end
end

-- Function to check if item name contains excluded words
local function isExcludedItem(itemName)
    local excludedWords = {"Favorite", "Trowel", "Shovel", "Spray", "Recall", "Sprinkler", "Glass", "Egg"}
    for _, word in ipairs(excludedWords) do
        if string.find(string.lower(itemName), string.lower(word)) then
            return true
        end
    end
    return false
end

-- Function to get valid items from Backpack
local function getBackpackItems()
    local pets = {}
    local fruits = {}
    for _, item in pairs(Backpack:GetChildren()) do
        if item:IsA("Tool") and not isExcludedItem(item.Name) then
            local itemNameLower = string.lower(item.Name)
            if string.find(itemNameLower, "age") then
                table.insert(pets, item.Name)
                -- Debug: Notify which items are categorized as Pets
                StarterGui:SetCore("SendNotification", {
                    Title = "Debug: Pet Detected",
                    Text = "Item '" .. item.Name .. "' added to Pets",
                    Duration = 3
                })
            else
                table.insert(fruits, item.Name)
                -- Debug: Notify which items are categorized as Fruits
                StarterGui:SetCore("SendNotification", {
                    Title = "Debug: Fruit Detected",
                    Text = "Item '" .. item.Name .. "' added to Fruits",
                    Duration = 3
                })
            end
        end
    end
    return pets, fruits
end

-- Function to clone item with modified attributes and name
local function cloneItem(itemName, weight, age)
    for _, item in pairs(Backpack:GetChildren()) do
        if item:IsA("Tool") and item.Name == itemName then
            local clonedItem = item:Clone()
            clonedItem.Parent = Backpack
            -- Remove "Age" and "Weight" from item name
            local newName = item.Name
            newName = string.gsub(string.lower(newName), "age", "")
            newName = string.gsub(string.lower(newName), "weight", "")
            newName = string.gsub(newName, "^%s*(.-)%s*$", "%1") -- Trim whitespace
            -- Set attributes on the item itself
            clonedItem:SetAttribute("Weight", weight)
            if age and string.find(string.lower(itemName), "age") then
                clonedItem:SetAttribute("Age", age)
            end
            -- Update attributes in children
            for _, child in pairs(clonedItem:GetChildren()) do
                if child:GetAttribute("Weight") ~= nil then
                    child:SetAttribute("Weight", weight)
                end
                if age and string.find(string.lower(itemName), "age") and child:GetAttribute("Age") ~= nil then
                    child:SetAttribute("Age", age)
                end
            end
            -- Update name with [x.xx KG] [Age x] format
            local weightStr = string.format("[%.2f KG]", weight)
            local ageStr = age and string.find(string.lower(itemName), "age") and string.format("[Age %d]", age) or ""
            clonedItem.Name = newName فارغة weightStr .. " " .. ageStr
            -- Notify
            StarterGui:SetCore("SendNotification", {
                Title = "Item Cloned",
                Text = "Cloned " .. itemName .. " as '" .. clonedItem.Name .. "' with Weight: " .. weight .. (age and string.find(string.lower(itemName), "age") and " and Age: " .. age or ""),
                Duration = 3
            })
            break
        end
    end
end

-- Create Dropdown (simplified, using TextButton list)
local function createDropdown(parent, name, options, callback)
    local DropdownFrame = Instance.new("ScrollingFrame")
    DropdownFrame.Size = UDim2.new(1, -10, 0, 100)
    DropdownFrame.Position = UDim2.new(0, 5, 0, 30)
    DropdownFrame.BackgroundTransparency = 1
    DropdownFrame.ScrollBarThickness = 5
    DropdownFrame.Parent = parent

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Parent = DropdownFrame

    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(1, 0, 0, 20)
    Label.Position = UDim2.new(0, 5, 0, 5)
    Label.Text = name
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.BackgroundTransparency = 1
    Label.TextScaled = true
    Label.Parent = parent

    for i, option in ipairs(options) do
        local Button = Instance.new("TextButton")
        Button.Size = UDim2.new(1, -10, 0, 30)
        Button.Text = option
        Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        Button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        Button.TextScaled = true
        Button.LayoutOrder = i
        Button.Parent = DropdownFrame
        Button.MouseButton1Click:Connect(function()
            callback(option)
        end)
    end
end

-- Create Input Field
local function createInput(parent, name, placeholder, callback)
    local InputFrame = Instance.new("Frame")
    InputFrame.Size = UDim2.new(1, -10, 0, 30)
    InputFrame.BackgroundTransparency = 1
    InputFrame.Parent = parent

    local Label = Instance.new("TextLabel")
    Label.Size = UDim2.new(0.4, 0, 1, 0)
    Label.Text = name
    Label.TextColor3 = Color3.fromRGB(255, 255, 255)
    Label.BackgroundTransparency = 1
    Label.TextScaled = true
    Label.Parent = InputFrame

    local TextBox = Instance.new("TextBox")
    TextBox.Size = UDim2.new(0.6, 0, 1, 0)
    TextBox.Position = UDim2.new(0.4, 0, 0, 0)
    TextBox.Text = ""
    TextBox.PlaceholderText = placeholder
    TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    TextBox.TextScaled = true
    TextBox.Parent = InputFrame
    TextBox.FocusLost:Connect(function()
        callback(TextBox.Text)
    end)

    return InputFrame
end

-- Tab Management
local currentTab = "Pets"
local AgeInputFrame = nil
local SelectedItem = nil
local WeightValue = 10
local AgeValue = 1

-- Create Tabs
local PetsTabButton = Instance.new("TextButton")
PetsTabButton.Size = UDim2.new(1, 0, 0, 50)
PetsTabButton.Position = UDim2.new(0, 0, 0, 0)
PetsTabButton.Text = "Pets"
PetsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PetsTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
PetsTabButton.TextScaled = true
PetsTabButton.Parent = TabFrame

local FruitsTabButton = Instance.new("TextButton")
FruitsTabButton.Size = UDim2.new(1, 0, 0, 50)
FruitsTabButton.Position = UDim2.new(0, 0, 0, 50)
FruitsTabButton.Text = "Fruits"
FruitsTabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
FruitsTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
FruitsTabButton.TextScaled = true
FruitsTabButton.Parent = TabFrame

-- Tab Content
local function showPetsTab()
    currentTab = "Pets"
    PetsTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    FruitsTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    clearContent()

    local pets, _ = getBackpackItems()
    createDropdown(ContentFrame, "Select Pet", pets, function(option)
        SelectedItem = option
    end)

    WeightInputFrame = createInput(ContentFrame, "Weight (KG)", "Enter weight (e.g., 10.5)", function(text)
        WeightValue = tonumber(text) or 10
    end)
    WeightInputFrame.Position = UDim2.new(0, 5, 0, 150)

    AgeInputFrame = createInput(ContentFrame, "Age", "Enter age (e.g., 5)", function(text)
        AgeValue = tonumber(text) or 1
    end)
    AgeInputFrame.Position = UDim2.new(0, 5, 0, 190)

    local CloneButton = Instance.new("TextButton")
    CloneButton.Size = UDim2.new(1, -10, 0, 30)
    CloneButton.Position = UDim2.new(0, 5, 0, 230)
    CloneButton.Text = "Clone Pet"
    CloneButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloneButton.BackgroundColor3 = Color3.fromRGB(0, 120, 0)
    CloneButton.TextScaled = true
    CloneButton.Parent = ContentFrame
    CloneButton.MouseButton1Click:Connect(function()
        if SelectedItem and WeightValue then
            cloneItem(SelectedItem, WeightValue, AgeValue)
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Error",
                Text = "Please select a pet and enter a valid weight.",
                Duration = 3
            })
        end
    end)
end

local function showFruitsTab()
    currentTab = "Fruits"
    PetsTabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    FruitsTabButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    clearContent()

    local _, fruits = getBackpackItems()
    createDropdown(ContentFrame, "Select Fruit", fruits, function(option)
        SelectedItem = option
    end)

    WeightInputFrame = createInput(ContentFrame, "Weight (KG)", "Enter weight (e.g., 10.5)", function(text)
        WeightValue = tonumber(text) or 10
    end)
    WeightInputFrame.Position = UDim2.new(0, 5, 0, 150)

    local CloneButton = Instance.new("TextButton")
    CloneButton.Size = UDim2.new(1, -10, 0, 30)
    CloneButton.Position = UDim2.new(0, 5, 0, 190)
    CloneButton.Text = "Clone Fruit"
    CloneButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloneButton.BackgroundColor3 = Color3.fromRGB(0, 120, 0)
    CloneButton.TextScaled = true
    CloneButton.Parent = ContentFrame
    CloneButton.MouseButton1Click:Connect(function()
        if SelectedItem and WeightValue then
            cloneItem(SelectedItem, WeightValue, nil)
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Error",
                Text = "Please select a fruit and enter a valid weight.",
                Duration = 3
            })
        end
    end)
end

-- Connect Tab Buttons
PetsTabButton.MouseButton1Click:Connect(showPetsTab)
FruitsTabButton.MouseButton1Click:Connect(showFruitsTab)

-- Initial Setup
showPetsTab()

-- Refresh Button
local RefreshButton = Instance.new("TextButton")
RefreshButton.Size = UDim2.new(1, 0, 0, 30)
RefreshButton.Position = UDim2.new(0, 0, 1, -30)
RefreshButton.Text = "Refresh Items"
RefreshButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RefreshButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
RefreshButton.TextScaled = true
RefreshButton.Parent = MainFrame
RefreshButton.MouseButton1Click:Connect(function()
    if currentTab == "Pets" then
        showPetsTab()
    else
        showFruitsTab()
    end
end)

-- Initial Notification
StarterGui:SetCore("SendNotification", {
    Title = "Grow a Garden Cloner Loaded",
    Text = "Select a pet or fruit to clone and customize its attributes!",
    Duration = 5
})
