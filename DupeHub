-- üß† –ü–æ–ª–Ω–∞—è —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è Backpack Cloner
local player = game.Players.LocalPlayer
local backpack = player:WaitForChild("Backpack")
local UIS = game:GetService("UserInputService")

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "BackpackDupeGUI"
gui.ResetOnSpawn = false

-- –ö–Ω–æ–ø–∫–∞-—Ç–æ–≥–≥–ª–µ—Ä
local toggleButton = Instance.new("ImageButton", gui)
toggleButton.Size = UDim2.new(0, 40, 0, 40)
toggleButton.Position = UDim2.new(0, 10, 0.5, -20)
toggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
toggleButton.Image = "rbxassetid://3926305904"
toggleButton.ImageRectOffset = Vector2.new(324, 364)
toggleButton.ImageRectSize = Vector2.new(36, 36)
toggleButton.BorderSizePixel = 0
toggleButton.AnchorPoint = Vector2.new(0, 0.5)
toggleButton:SetAttribute("Dragging", false)
toggleButton:SetAttribute("DragOffset", Vector2.new())

toggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		toggleButton:SetAttribute("Dragging", true)
		toggleButton:SetAttribute("DragOffset", Vector2.new(input.Position.X - toggleButton.AbsolutePosition.X, input.Position.Y - toggleButton.AbsolutePosition.Y))
	end
end)
toggleButton.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		toggleButton:SetAttribute("Dragging", false)
	end
end)
UIS.InputChanged:Connect(function(input)
	if toggleButton:GetAttribute("Dragging") and input.UserInputType == Enum.UserInputType.MouseMovement then
		local offset = toggleButton:GetAttribute("DragOffset")
		toggleButton.Position = UDim2.new(0, input.Position.X - offset.X, 0, input.Position.Y - offset.Y)
	end
end)

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 280, 0, 320)
frame.Position = UDim2.new(0.5, -140, 0.5, -160)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Visible = false

toggleButton.MouseButton1Click:Connect(function()
	frame.Visible = not frame.Visible
end)

local titleBar = Instance.new("TextLabel", frame)
titleBar.Size = UDim2.new(1, 0, 0, 20)
titleBar.Text = "üì¶ Backpack Dupe"
titleBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
titleBar.TextColor3 = Color3.new(1, 1, 1)
titleBar.Font = Enum.Font.SourceSansBold
titleBar.TextSize = 14
titleBar.TextXAlignment = Enum.TextXAlignment.Left

-- Dropdown
local dropdown = Instance.new("TextButton", frame)
dropdown.Size = UDim2.new(1, -20, 0, 30)
dropdown.Position = UDim2.new(0, 10, 0, 30)
dropdown.Text = "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç"
dropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
dropdown.TextColor3 = Color3.new(1,1,1)

local dropdownFrame = Instance.new("ScrollingFrame", frame)
dropdownFrame.Size = UDim2.new(1, -20, 0, 80)
dropdownFrame.Position = UDim2.new(0, 10, 0, 65)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
dropdownFrame.Visible = false
dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
dropdownFrame.ScrollBarThickness = 6
dropdownFrame.BorderSizePixel = 0

-- Labels
local weightLabel = Instance.new("TextLabel", frame)
weightLabel.Position = UDim2.new(0, 10, 0, 160)
weightLabel.Size = UDim2.new(0, 60, 0, 20)
weightLabel.Text = "–í–µ—Å:"
weightLabel.BackgroundTransparency = 1
weightLabel.TextColor3 = Color3.new(1,1,1)
weightLabel.Font = Enum.Font.SourceSans
weightLabel.TextSize = 14
weightLabel.TextXAlignment = Enum.TextXAlignment.Left

local weightInput = Instance.new("TextBox", frame)
weightInput.Position = UDim2.new(0, 70, 0, 160)
weightInput.Size = UDim2.new(0, 60, 0, 20)
weightInput.PlaceholderText = "10"
weightInput.Text = ""
weightInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
weightInput.TextColor3 = Color3.new(1,1,1)
weightInput.ClearTextOnFocus = false

local ageLabel = Instance.new("TextLabel", frame)
ageLabel.Position = UDim2.new(0, 150, 0, 160)
ageLabel.Size = UDim2.new(0, 60, 0, 20)
ageLabel.Text = "–í–æ–∑—Ä–∞—Å—Ç:"
ageLabel.BackgroundTransparency = 1
ageLabel.TextColor3 = Color3.new(1,1,1)
ageLabel.Font = Enum.Font.SourceSans
ageLabel.TextSize = 14
ageLabel.TextXAlignment = Enum.TextXAlignment.Left

local ageInput = Instance.new("TextBox", frame)
ageInput.Position = UDim2.new(0, 210, 0, 160)
ageInput.Size = UDim2.new(0, 60, 0, 20)
ageInput.PlaceholderText = "5"
ageInput.Text = ""
ageInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ageInput.TextColor3 = Color3.new(1,1,1)
ageInput.ClearTextOnFocus = false

-- Buttons
local dupeOne = Instance.new("TextButton", frame)
dupeOne.Size = UDim2.new(0.48, -5, 0, 30)
dupeOne.Position = UDim2.new(0, 10, 0, 270)
dupeOne.Text = "DUPE"
dupeOne.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
dupeOne.TextColor3 = Color3.new(1,1,1)

local dupeAll = Instance.new("TextButton", frame)
dupeAll.Size = UDim2.new(0.48, -5, 0, 30)
dupeAll.Position = UDim2.new(0.52, 0, 0, 270)
dupeAll.Text = "DUPE –í–°–Å"
dupeAll.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
dupeAll.TextColor3 = Color3.new(1,1,1)

-- Logic
local selectedItem = nil
local clonedInstances = {}

local blockedWords = {
	"Favorite", "Trowel", "Shovel", "Spray", "Recall", "Sprinkler", "Glass", "Egg"
}

local function isAllowed(item)
	if item:IsA("ObjectValue") then return false end
	for _, word in ipairs(blockedWords) do
		if string.find(item.Name:lower(), word:lower()) then return false end
	end
	if clonedInstances[item] then return false end
	return true
end

local function cleanName(name)
	return name:gsub("%s*%[.-%s*KG%]", ""):gsub("%s*%[Age%s*%d+%]", "")
end

local function getNumber(input, default, min, max, round)
	local value = tonumber(input.Text)
	if not value then value = tonumber(input.PlaceholderText) or default end
	value = math.clamp(value, min, max)
	return round and math.floor(value) or math.floor(value * 100 + 0.5) / 100
end

local function scaleAndAnimate(tool, weight, age)
	local scaleFactor = math.clamp((weight / 10) * (1 / age), 0.2, 3)
	for _, d in pairs(tool:GetDescendants()) do
		if d:IsA("BasePart") then
			local originalSize = d.Size
			d.Transparency = 0
			d.Size = originalSize * scaleFactor * 0.1
			task.spawn(function()
				for i = 1, 10 do
					d.Size = d.Size:Lerp(originalSize * scaleFactor, 0.25)
					task.wait(0.02)
				end
				d.Size = originalSize * scaleFactor
			end)
		elseif d:IsA("SpecialMesh") then
			d.Scale *= scaleFactor
		end
	end
end

local function cloneItem(item)
	local weight = getNumber(weightInput, 10, 0.1, 100, false)
	local age = getNumber(ageInput, 5, 1, 100, true)
	local tool = Instance.new("Tool")
	tool.Name = cleanName(item.Name) .. string.format(" [%.2f KG] [Age %d]", weight, age)
	tool.RequiresHandle = false

	local model = item:Clone()
	model:SetAttribute("Weight", weight)
	model:SetAttribute("Age", age)
	scaleAndAnimate(model, weight, age)
	model.Parent = tool

	local handle = model:FindFirstChildWhichIsA("BasePart") or Instance.new("Part")
	handle.Name = "Handle"
	handle.Anchored = false
	handle.CanCollide = false
	handle.Transparency = 0
	handle.Parent = tool

	tool.Parent = backpack
	clonedInstances[item] = true
end

local function updateItemList()
	dropdownFrame:ClearAllChildren()
	local y = 0
	for _, item in pairs(backpack:GetChildren()) do
		if isAllowed(item) then
			local btn = Instance.new("TextButton", dropdownFrame)
			btn.Size = UDim2.new(1, 0, 0, 24)
			btn.Position = UDim2.new(0, 0, 0, y)
			btn.Text = item.Name
			btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
			btn.TextColor3 = Color3.new(1,1,1)
			btn.TextScaled = true
			btn.MouseButton1Click:Connect(function()
				selectedItem = item
				dropdown.Text = "–í—ã–±—Ä–∞–Ω: " .. item.Name
				dropdownFrame.Visible = false
			end)
			y += 24
		end
	end
	dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, y)
end

dropdown.MouseButton1Click:Connect(function()
	dropdownFrame.Visible = not dropdownFrame.Visible
	if dropdownFrame.Visible then updateItemList() end
end)

dupeOne.MouseButton1Click:Connect(function()
	if selectedItem and isAllowed(selectedItem) then
		cloneItem(selectedItem)
		updateItemList()
	else
		warn("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç.")
	end
end)

dupeAll.MouseButton1Click:Connect(function()
	for _, item in pairs(backpack:GetChildren()) do
		if isAllowed(item) then
			cloneItem(item)
		end
	end
	updateItemList()
end)
