-- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç–∏
local GUI_WIDTH_SCALE = 0.3 -- –ú–∞—Å—à—Ç–∞–± —à–∏—Ä–∏–Ω—ã GUI (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö –æ—Ç —ç–∫—Ä–∞–Ω–∞)
local GUI_HEIGHT_SCALE = 0.4 -- –ú–∞—Å—à—Ç–∞–± –≤—ã—Å–æ—Ç—ã GUI
local BUTTON_SIZE = 40 -- –†–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
local DROPDOWN_HEIGHT = 80 -- –í—ã—Å–æ—Ç–∞ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
local ITEM_BUTTON_HEIGHT = 24 -- –í—ã—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
local MAX_ITEMS = 100 -- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏

-- –°–µ—Ä–≤–∏—Å—ã
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä–æ–∫–∞ –∏ —Ä—é–∫–∑–∞–∫–∞
local player = Players.LocalPlayer
if not player then
    warn("LocalPlayer not found!")
    return
end

local backpack = player:WaitForChild("Backpack", 5)
if not backpack then
    warn("Backpack not found!")
    return
end

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "BackpackDupeGUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui", 5)

-- Toggle Button
local toggleButton = Instance.new("ImageButton")
toggleButton.Size = UDim2.new(0, BUTTON_SIZE, 0, BUTTON_SIZE)
toggleButton.Position = UDim2.new(0, 10, 0.5, -BUTTON_SIZE / 2)
toggleButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
toggleButton.Image = "rbxassetid://3926305904"
toggleButton.ImageRectOffset = Vector2.new(324, 364)
toggleButton.ImageRectSize = Vector2.new(36, 36)
toggleButton.BackgroundTransparency = 0
toggleButton.BorderSizePixel = 0
toggleButton.ClipsDescendants = true
toggleButton.ZIndex = 10
toggleButton.AutoButtonColor = true
toggleButton.AnchorPoint = Vector2.new(0, 0.5)
toggleButton:SetAttribute("Dragging", false)
toggleButton:SetAttribute("DragOffset", Vector2.new())

-- –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –ø–æ —ç–∫—Ä–∞–Ω—É
toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        toggleButton:SetAttribute("Dragging", true)
        toggleButton:SetAttribute("DragOffset", Vector2.new(
            input.Position.X - toggleButton.AbsolutePosition.X,
            input.Position.Y - toggleButton.AbsolutePosition.Y
        ))
    end
end)

toggleButton.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        toggleButton:SetAttribute("Dragging", false)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if toggleButton:GetAttribute("Dragging") and input.UserInputType == Enum.UserInputType.MouseMovement then
        local offset = toggleButton:GetAttribute("DragOffset")
        local screenSize = game:GetService("GuiService"):GetScreenResolution()
        local newX = math.clamp(input.Position.X - offset.X, 0, screenSize.X - toggleButton.AbsoluteSize.X)
        local newY = math.clamp(input.Position.Y - offset.Y, 0, screenSize.Y - toggleButton.AbsoluteSize.Y)
        toggleButton.Position = UDim2.new(0, newX, 0, newY)
    end
end)

-- –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
local frame = Instance.new("Frame")
frame.Size = UDim2.new(GUI_WIDTH_SCALE, 0, GUI_HEIGHT_SCALE, 0)
frame.Position = UDim2.new(0.5, 0, 0.5, 0)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.Visible = false
frame.Parent = gui

toggleButton.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
end)

-- –ó–∞–≥–æ–ª–æ–≤–æ–∫
local titleBar = Instance.new("TextLabel")
titleBar.Size = UDim2.new(1, 0, 0, 20)
titleBar.Text = "üì¶ Backpack Dupe"
titleBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
titleBar.TextColor3 = Color3.new(1, 1, 1)
titleBar.Font = Enum.Font.SourceSansBold
titleBar.TextSize = 14
titleBar.TextXAlignment = Enum.TextXAlignment.Left
titleBar.Parent = frame

-- –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
local dragging, dragInput, dragStart, startPos
titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

titleBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

-- –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
local dropdown = Instance.new("TextButton")
dropdown.Size = UDim2.new(1, -20, 0, 30)
dropdown.Position = UDim2.new(0, 10, 0, 30)
dropdown.Text = "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç"
dropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
dropdown.TextColor3 = Color3.new(1, 1, 1)
dropdown.Parent = frame

local dropdownFrame = Instance.new("ScrollingFrame")
dropdownFrame.Size = UDim2.new(1, -20, 0, DROPDOWN_HEIGHT)
dropdownFrame.Position = UDim2.new(0, 10, 0, 65)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
dropdownFrame.Visible = false
dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
dropdownFrame.ScrollBarThickness = 6
dropdownFrame.BorderSizePixel = 0
dropdownFrame.Parent = frame

-- –ü–æ–ª—è –≤–≤–æ–¥–∞
local weightLabel = Instance.new("TextLabel")
weightLabel.Position = UDim2.new(0, 10, 0, 160)
weightLabel.Size = UDim2.new(0, 60, 0, 20)
weightLabel.Text = "–í–µ—Å:"
weightLabel.BackgroundTransparency = 1
weightLabel.TextColor3 = Color3.new(1, 1, 1)
weightLabel.Font = Enum.Font.SourceSans
weightLabel.TextSize = 14
weightLabel.TextXAlignment = Enum.TextXAlignment.Left
weightLabel.Parent = frame

local weightInput = Instance.new("TextBox")
weightInput.Position = UDim2.new(0, 70, 0, 160)
weightInput.Size = UDim2.new(0, 60, 0, 20)
weightInput.PlaceholderText = "10"
weightInput.Text = ""
weightInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
weightInput.TextColor3 = Color3.new(1, 1, 1)
weightInput.ClearTextOnFocus = false
weightInput.Parent = frame

local ageLabel = Instance.new("TextLabel")
ageLabel.Position = UDim2.new(0, 150, 0, 160)
ageLabel.Size = UDim2.new(0, 60, 0, 20)
ageLabel.Text = "–í–æ–∑—Ä–∞—Å—Ç:"
ageLabel.BackgroundTransparency = 1
ageLabel.TextColor3 = Color3.new(1, 1, 1)
ageLabel.Font = Enum.Font.SourceSans
ageLabel.TextSize = 14
ageLabel.TextXAlignment = Enum.TextXAlignment.Left
ageLabel.Parent = frame

local ageInput = Instance.new("TextBox")
ageInput.Position = UDim2.new(0, 210, 0, 160)
ageInput.Size = UDim2.new(0, 60, 0, 20)
ageInput.PlaceholderText = "5"
ageInput.Text = ""
ageInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ageInput.TextColor3 = Color3.new(1, 1, 1)
ageInput.ClearTextOnFocus = false
ageInput.Parent = frame

-- –ö–Ω–æ–ø–∫–∏
local dupeOne = Instance.new("TextButton")
dupeOne.Size = UDim2.new(0.48, -5, 0, 30)
dupeOne.Position = UDim2.new(0, 10, 0, 270)
dupeOne.Text = "DUPE"
dupeOne.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
dupeOne.TextColor3 = Color3.new(1, 1, 1)
dupeOne.Parent = frame

local dupeAll = Instance.new("TextButton")
dupeAll.Size = UDim2.new(0.48, -5, 0, 30)
dupeAll.Position = UDim2.new(0.52, 0, 0, 270)
dupeAll.Text = "DUPE –í–°–Å"
dupeAll.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
dupeAll.TextColor3 = Color3.new(1, 1, 1)
dupeAll.Parent = frame

-- –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
local function showError(message)
    local errorLabel = Instance.new("TextLabel")
    errorLabel.Size = UDim2.new(1, -20, 0, 20)
    errorLabel.Position = UDim2.new(0, 10, 0, 190)
    errorLabel.Text = message
    errorLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    errorLabel.BackgroundTransparency = 1
    errorLabel.TextScaled = true
    errorLabel.Parent = frame
    task.delay(3, function() errorLabel:Destroy() end)
end

-- –õ–æ–≥–∏–∫–∞
local selectedItem = nil
local clonedInstances = {}
local itemButtons = {} -- –ö—ç—à –∫–Ω–æ–ø–æ–∫ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

local blockedWords = {
    "Favorite", "Trowel", "Shovel", "Spray",
    "Recall", "Sprinkler", "Glass", "Egg"
}

-- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
local function isAllowed(item)
    if item:IsA("ObjectValue") then return false end
    for _, word in ipairs(blockedWords) do
        if string.find(item.Name:lower(), word:lower()) then return false end
    end
    if clonedInstances[item] then return false end
    return true
end

-- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
local function updateItemList()
    for _, btn in pairs(itemButtons) do
        btn:Destroy()
    end
    itemButtons = {}
    local y = 0
    local itemCount = 0
    for _, item in pairs(backpack:GetChildren()) do
        if isAllowed(item) and itemCount < MAX_ITEMS then
            local btn = Instance.new("TextButton")
            btn.Size = UDim2.new(1, 0, 0, ITEM_BUTTON_HEIGHT)
            btn.Position = UDim2.new(0, 0, 0, y)
            btn.Text = item.Name
            btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            btn.TextColor3 = Color3.new(1, 1, 1)
            btn.TextScaled = true
            btn.Parent = dropdownFrame
            btn.MouseButton1Click:Connect(function()
                selectedItem = item
                dropdown.Text = "–í—ã–±—Ä–∞–Ω: " .. item.Name
                dropdownFrame.Visible = false
            end)
            table.insert(itemButtons, btn)
            y += ITEM_BUTTON_HEIGHT
            itemCount += 1
        end
    end
    dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, y)
end

dropdown.MouseButton1Click:Connect(function()
    dropdownFrame.Visible = not dropdownFrame.Visible
    if dropdownFrame.Visible then updateItemList() end
end)

-- –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∏—Å–ª–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
local function getLimitedNumber(input, default, min, max, roundToDecimal)
    local value = tonumber(input.Text) or tonumber(input.PlaceholderText) or default
    if not value then
        showError("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—é: " .. default)
        return default
    end
    value = math.clamp(value, min, max)
    if roundToDecimal then
        return math.floor(value * 100 + 0.5) / 100
    end
    return math.floor(value)
end

local function getWeight()
    return getLimitedNumber(weightInput, 10, 0.1, 100, true)
end

local function getAge()
    return getLimitedNumber(ageInput, 5, 1, 100, false)
end

-- –û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –æ—Ç —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤
local function cleanName(name)
    return name
        :gsub("%s*%[.-%s*KG%]", "")
        :gsub("%s*%[Age%s*%d+%]", "")
        :gsub("%s+", " ")
        :match("^%s*(.-)%s*$") or name
end

-- –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –º–æ–¥–µ–ª–∏
local function scaleModelContents(tool, weight, age)
    for _, descendant in pairs(tool:GetDescendants()) do
        if descendant:IsA("BasePart") then
            local baseSize = descendant.Size
            local weightFactor = math.clamp(weight / 10, 0.1, 10)
            local ageFactor = math.clamp(age / 10, 0.5, 2)
            local finalScale = weightFactor * (1 / ageFactor)
            descendant.Size = baseSize * finalScale
        elseif descendant:IsA("SpecialMesh") then
            local scale = descendant.Scale
            local weightFactor = math.clamp(weight / 10, 0.1, 10)
            local ageFactor = math.clamp(age / 10, 0.5, 2)
            local finalScale = weightFactor * (1 / ageFactor)
            descendant.Scale = scale * finalScale
        end
    end
end

-- –ê–Ω–∏–º–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∫–ª–æ–Ω–∞ (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞)
local function animateCloneSize(tool)
    local parts = {}
    for _, part in ipairs(tool:GetDescendants()) do
        if part:IsA("BasePart") then
            table.insert(parts, {part = part, originalSize = part.Size})
            part.Size = part.Size * 0.1
        end
    end
    task.spawn(function()
        for i = 1, 10 do
            for _, data in ipairs(parts) do
                data.part.Size = data.part.Size:Lerp(data.originalSize, 0.25)
            end
            task.wait(0.02)
        end
        for _, data in ipairs(parts) do
            data.part.Size = data.originalSize
        end
    end)
end

-- –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
local function dupeItem(item)
    local clone = item:Clone()
    local weight = getWeight()
    local age = getAge()
    clone:SetAttribute("Weight", weight)
    clone:SetAttribute("Age", age)
    scaleModelContents(clone, weight, age)
    animateCloneSize(clone)
    clone.Name = cleanName(item.Name) .. string.format(" [%.2f KG] [Age %d]", weight, age)
    clone.Parent = backpack
    clonedInstances[item] = true
    showError("–ü—Ä–µ–¥–º–µ—Ç " .. item.Name .. " —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!")
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "DUPE"
dupeOne.MouseButton1Click:Connect(function()
    if selectedItem and isAllowed(selectedItem) then
        dupeItem(selectedItem)
        updateItemList()
    else
        showError("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç!")
    end
end)

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "DUPE –í–°–Å"
dupeAll.MouseButton1Click:Connect(function()
    local count = 0
    for _, item in pairs(backpack:GetChildren()) do
        if isAllowed(item) then
            dupeItem(item)
            count += 1
        end
    end
    showError("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤: " .. count)
    updateItemList()
end)

-- –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
local function resetClonedInstances()
    clonedInstances = {}
end
backpack.ChildAdded:Connect(resetClonedInstances)
backpack.ChildRemoved:Connect(resetClonedInstances)
